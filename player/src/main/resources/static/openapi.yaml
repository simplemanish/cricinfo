openapi: "3.0.0"
info:
  title: CricInfo Player API
  description: This is CricInfo Player OpenAPI 3.0.0 specification.
  contact:
    email: Manish.Tamta@nttdata.com
  version:  1.0.0
paths:
  /Api/v1/player:
    post:
      summary: Create player
      description: Create a player with given input.
      operationId: createPlayer
      requestBody:
        description: "Request body"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                  example: "Rishabh"
                lastname:
                  type: string
                  example: "Pant"
                dob:
                  type: string
                  example: "1997-10-04"
                nationality:
                  type: string
                  example: "Indian"
                roles:
                  type: array
                  items:
                    type: integer
                    example: 1
      responses:
        '201':
          description: Player added successful  
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Player added successful"   
        '400':
          description: "Invalid input provided"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      firstname:
                        type: string
                        example: "Invalid size"
                      dob:
                        type: string
                        example: "Valid date format yyyy-MM-dd"
  /Api/v1/player/{player_id}:
    get:
      summary: Get a player details by id
      description: Get a player details by player id.
      operationId: getPlayerDetails
      parameters:
        - name: player_id
          in: path
          description: Id of a player to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Player successful found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'          
        '400':
          description: Invalid id provided
        '404':
          description: Player not found  
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Player not found"
  /Api/v1/player/{player_Id}:
    put:
      summary: Update a player details
      description: Update player details with given input.
      operationId: updatePlayer
      parameters:
        - name: player_Id
          in: path
          description: Id of a player to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: "Request body"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                  example: "Rishabh"
                lastname:
                  type: string
                  example: "Pant"
                dob:
                  type: string
                  example: "1997-10-04"
                nationality:
                  type: string
                  example: "Indian"
                roles:
                  type: array
                  items:
                    type: integer
                    example: 2
      responses:
        '200':
          description: Player details updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Player updated successful"        
        '400':
          description: "Invalid input provided"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                       dob:
                        type: string
                        example: "Valid date format yyyy-MM-dd"
        '404':
          description: Player not found  
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Player not found"
                    
  /Api/v1/player/{playerId}:
    delete:
      summary: Delete a player by id
      description: Delete a player by player id.
      operationId: deletePlayer
      parameters:
        - name: playerId
          in: path
          description: Id of a player to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Player deleted successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Player deleted successful"      
        '400':
          description: Invalid id provided
        '404':
          description: Player not found  
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Player not found"
components:
  schemas:
    Player:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        firstname:
          type: string
          example: "Rishabh"
        lastname:
          type: string
          example: "Pant"
        dob:
          type: string
          example: "1997-10-04"
        nationality:
          type: string
          example: "Indian"
        roles:
          type: array
          items:
            type: integer
            example: 1
        roleNames:
          type: array
          items:
            type: string
            example: "WICKET_KEEPER"
    Role:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Batter